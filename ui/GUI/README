PEOS GUI Iteration 4 README
Authors: Cp Agarwal       cagarwal@scu.edu   219290
	 Jonathan Montana jmontana@scu.edu   221223
	 Leo Pinard       lpinard@scu.edu    196986
	 Tri Pham         tpham1@scu.edu     208920


(1) How to Build the Program

To build the program, untar the tarball into your current directory
and then change to the peos directory.  From the command line, run
the Makefile using the command "make".


(2) How to Install
Currently under modifications:
a) In order to run the PEOS program you first need to locate the programs dependencies and download the tar balls from the sites that are listed.

(I have to check these again to make sure I typed them right.)
Package				Location                 Note
-----------------------------------------------------------------------------------------------------

libxml2                         www.xmlsoft.org    Click on ftp link on the left handside of website.
gal-1.0	(a.k.a. gal-0.24)	www.susede/de/private/products/suse_linux/prof/packages_professional/index_group.html
gnome-1.0                       www.gnu.org
gdk-pixbuf-1.0                  ?
gtkhtml-1.1                     www.openbsd.org/3.5_packages/powerpc/gtkhtml-1.1.10.tgz-contents.html
orbit-1.0			sf.gds.tuwien.ac.at/c/cy/cygnome/?fise/=0-9,a-z,A-A


b) Install tar packages into your home directory. Presupposing that you know how to do this.

c) Developer: Type the following make commands:

#Compiles and loads PEOS.
all

#Executes the binary file.
runpeos

#Search and output to standard out the directory names that contain the library dependencies for PEOS.
runpeos_lib_dirs

#Static library dependencies for PEOS.
runpeos_lib_names_a

#Dynamic library dependencies for PEOS.
runpeos_lib_names_so

#Path locations for static libraries.
runpeos_lib_locations_a

#Path locations for dynamic libraries.
runpeos_lib_locations_so


#Search and output to standard out the directory names that contain the header dependencies for PEOS.
runpeos_header_dirs

#Collect the headers
collect_headers

#Collect the libraries
collect_libs

#Creates the tar file for the user. With a new user makefile to run PEOS.
dist

Note: After the files have been downloaded from the cvs box the developer will install the tar files into his/her home directory the macros will be created to locate the header and library dependencies. The developer will then use the makefile that uses the macros from the install and will search for the files and then copy them into a tree to package for the user. The user will then be able to untar the tar ball and run PEOS. Side note: The library and header files are not saved into the CVS box.

d) After all the packages have been installed, then type: make dist to package atar ball for the user. The user will have a modified makefile and will include only user previlage commands. But this is sufficient after the developer has packaged it for the user.

(3) How to Run the Program

After building the program as outlined in section (1) above,
you can run the program by typing the command "./runpeos" at the
command prompt from the directory containing the program files.

NOTE: This program is not case sensitive.


(4) Creating a Process

Click on File->Create (or press Control + C) in order to create a process.  A dialog box will pop up, allowing you to browse through your directories.  Find the desired .pml file, select it, and click on "OK."


(5) Viewing a Process

There are 2 ways to view active processes:
1. Once a process has been created, you can view it by goingto the "View" menu in the menu bar.  It will list all of the active processes. Click on the process you want to view.
2. Click on the tab with the desired process.


(6) Deleting a Process

Click on File->Delete, then select the process you want to delete.  Click "OK" on the dialog box that pops up.


(7) Actions

(7a) Completing an Action

Click on the "Start" button at the bottom of the window.  If there is a required resource, enter it into the dialog box that pops up.  Click on the "Finish" button to finish the action.  Click the right arrow at the bottom of the screen to move on to the next action.

(7b) Extra Capabilities for an Action

At any time before you finish the action, you can suspend, abort, or rebind.  Clicking on "Suspend" lets you save the state of the action, which lets you move on to the next action without losing the state or any resources you have already entered.  Clicking on "Abort" stops the action, and resets the state back to "NONE," but it keeps any entered resources.  "Rebind" lets you re-enter a required resource if there already is one, and the action allows it.

If you want to revisit an action, you can click on the back arrow.


(8) Finishing a Process

When you click "Finish" on the last action, you are done with the process.

(9) Checking the resources

There are links on the right window pane when the resouce is given a value. If the value is found the Konqueror will run that specific resource with the associated program. If the resources is not executable the Konqueror will pop-up a window with an error. DO NOT CLICK ON THAT WINDOW, PRESS ENTER TO ESCAPE FROM THAT WINDOW. Given the behaviour of Konqueror, if you have clicked on the window by mistake, you will have to press ENTER the same number of times as you have clicked the mouse on the window.


Last Modified: 06/06/2004

